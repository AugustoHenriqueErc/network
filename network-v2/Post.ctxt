#BlueJ class context
comment0.target=Post
comment0.text=\r\n\ This\ class\ stores\ information\ about\ a\ news\ feed\ post\ in\ a\ \r\n\ social\ network.\ Posts\ can\ be\ stored\ and\ displayed.\ This\ class\r\n\ serves\ as\ a\ superclass\ for\ more\ specific\ post\ types.\r\n\ \r\n\ @author\ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\r\n\ @version\ 0.2\r\n
comment1.params=author
comment1.target=Post(java.lang.String)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Post.\r\n\ \r\n\ @param\ author\ \ \ \ The\ username\ of\ the\ author\ of\ this\ post.\r\n
comment10.params=time
comment10.target=java.lang.String\ timeString(long)
comment10.text=\r\n\ Create\ a\ string\ describing\ a\ time\ point\ in\ the\ past\ in\ terms\ \r\n\ relative\ to\ current\ time,\ such\ as\ "30\ seconds\ ago"\ or\ "7\ minutes\ ago".\r\n\ Currently,\ only\ seconds\ and\ minutes\ are\ used\ for\ the\ string.\r\n\ \r\n\ @param\ time\ \ The\ time\ value\ to\ convert\ (in\ system\ milliseconds)\r\n\ @return\ \ \ \ \ \ A\ relative\ time\ string\ for\ the\ given\ time\r\n
comment2.params=
comment2.target=java.lang.String\ getUsername()
comment3.params=
comment3.target=void\ like()
comment3.text=\r\n\ Record\ one\ more\ 'Like'\ indication\ from\ a\ user.\r\n
comment4.params=
comment4.target=void\ unlike()
comment4.text=\r\n\ Record\ that\ a\ user\ has\ withdrawn\ his/her\ 'Like'\ vote.\r\n
comment5.params=text
comment5.target=void\ addComment(java.lang.String)
comment5.text=\r\n\ Add\ a\ comment\ to\ this\ post.\r\n\ \r\n\ @param\ text\ \ The\ new\ comment\ to\ add.\r\n
comment6.params=
comment6.target=long\ getTimeStamp()
comment6.text=\r\n\ Return\ the\ time\ of\ creation\ of\ this\ post.\r\n\ \r\n\ @return\ The\ post's\ creation\ time,\ as\ a\ system\ time\ value.\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=public\ void\ display()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ System.out.println(username);\r\n\ \ \ \ \ \ \ \ System.out.print(timeString(timestamp));\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ if(likes\ >\ 0)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("\ \ -\ \ "\ +\ likes\ +\ "\ people\ like\ this.");\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println();\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ if(comments.isEmpty())\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("\ \ \ No\ comments.");\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("\ \ \ "\ +\ comments.size()\ +\ "\ comment(s).\ Click\ here\ to\ view.");\r\n\ \ \ \ \ \ \ \ }\r\n}
comment8.params=
comment8.target=java.lang.String\ getLikes()
comment9.params=
comment9.target=java.lang.String\ getComments()
numComments=11
